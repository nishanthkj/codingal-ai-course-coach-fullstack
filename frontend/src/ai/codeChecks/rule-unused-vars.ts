import { parse } from '@babel/parser'; import type { Issue } from './index'
export function checkUnusedVars(code:string):Issue[]{const ast=parse(code,{sourceType:'module',plugins:['jsx','typescript']});const dec:Record<string,{used:boolean,loc:any}>={};const issues:Issue[]=[];function tr(n:any){if(!n||typeof n!=='object')return;if(n.type==='VariableDeclarator'&&n.id?.name){dec[n.id.name]={used:false,loc:n.loc?.start}}if(n.type==='Identifier'&&n.name in dec){dec[n.name].used=true}for(const k of Object.keys(n)){const c=(n as any)[k];if(Array.isArray(c))c.forEach(tr);else tr(c)}}tr(ast);for(const [name,meta]of Object.entries(dec)){if(!meta.used){issues.push({rule:'unused-vars',message:`Variable "${name}" is declared but never used.`,severity:'warn',fixHint:`Remove "${name}" or use it.`,location:meta.loc?{line:meta.loc.line,column:meta.loc.column}:undefined})}}return issues}
