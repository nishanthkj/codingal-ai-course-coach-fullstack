services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    build:
      context: ./backend/app
      dockerfile: Dockerfile
    # Use entrypoint to run migrations then start gunicorn
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    depends_on:
      - db
    networks:
      - app_network
    # For dev only: uncomment volume to mount local code over image
    # volumes:
    #   - ./backend:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      VITE_BACKEND_URL: ${VITE_BACKEND_URL}
    networks:
      - app_network
    # For dev only: uncomment volume
    # volumes:
    #   - ./frontend:/app

  pgadmin:
    image: dpage/pgadmin4:7
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./.env:/pgadmin/.env:ro
    networks:
      - app_network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app_network:
    driver: bridge
